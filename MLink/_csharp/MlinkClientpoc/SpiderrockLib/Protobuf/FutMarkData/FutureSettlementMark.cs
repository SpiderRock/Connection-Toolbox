// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/FutMarkData/FutureSettlementMark.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spiderrock.Protobuf {

  /// <summary>Holder for reflection information generated from Protobuf/FutMarkData/FutureSettlementMark.proto</summary>
  public static partial class FutureSettlementMarkReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/FutMarkData/FutureSettlementMark.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FutureSettlementMarkReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci9Qcm90b2J1Zi9GdXRNYXJrRGF0YS9GdXR1cmVTZXR0bGVtZW50TWFyay5w",
            "cm90bxITc3BpZGVycm9jay5wcm90b2J1ZhoXc3BpZGVycm9ja19jb21tb24u",
            "cHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8iqgMKFEZ1",
            "dHVyZVNldHRsZW1lbnRNYXJrEjMKBV9tZXRhGAEgASgLMiQuc3BpZGVycm9j",
            "ay5wcm90b2J1Zi5NZXNzYWdlTWV0YWRhdGESPAoEcGtleRgCIAEoCzIuLnNw",
            "aWRlcnJvY2sucHJvdG9idWYuRnV0dXJlU2V0dGxlbWVudE1hcmsuUEtleRIx",
            "CgtzZXR0bGVfZGF0ZRhkIAEoCzIcLnNwaWRlcnJvY2sucHJvdG9idWYuRGF0",
            "ZUtleRIRCglzZXR0bGVfcHgYZyABKAESEgoKbG93X2xtdF9weBhqIAEoARIT",
            "CgtoaWdoX2xtdF9weBhtIAEoARIQCghvcGVuX2ludBhwIAEoBRIOCgZ2b2x1",
            "bWUYcyABKAUSKQoFZWFybHkYdiABKA4yGi5zcGlkZXJyb2NrLnByb3RvYnVm",
            "Llllc05vEi0KCXRpbWVzdGFtcBh5IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5U",
            "aW1lc3RhbXAaNAoEUEtleRIsCgRma2V5GAogASgLMh4uc3BpZGVycm9jay5w",
            "cm90b2J1Zi5FeHBpcnlLZXliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Spiderrock.Protobuf.SpiderrockCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.FutureSettlementMark), global::Spiderrock.Protobuf.FutureSettlementMark.Parser, new[]{ "Meta", "Pkey", "SettleDate", "SettlePx", "LowLmtPx", "HighLmtPx", "OpenInt", "Volume", "Early", "Timestamp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spiderrock.Protobuf.FutureSettlementMark.Types.PKey), global::Spiderrock.Protobuf.FutureSettlementMark.Types.PKey.Parser, new[]{ "Fkey" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  ///Future settlement marks from the listing exchange
  /// </summary>
  public sealed partial class FutureSettlementMark : pb::IMessage<FutureSettlementMark>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FutureSettlementMark> _parser = new pb::MessageParser<FutureSettlementMark>(() => new FutureSettlementMark());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FutureSettlementMark> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spiderrock.Protobuf.FutureSettlementMarkReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FutureSettlementMark() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FutureSettlementMark(FutureSettlementMark other) : this() {
      Meta_ = other.Meta_ != null ? other.Meta_.Clone() : null;
      pkey_ = other.pkey_ != null ? other.pkey_.Clone() : null;
      settleDate_ = other.settleDate_ != null ? other.settleDate_.Clone() : null;
      settlePx_ = other.settlePx_;
      lowLmtPx_ = other.lowLmtPx_;
      highLmtPx_ = other.highLmtPx_;
      openInt_ = other.openInt_;
      volume_ = other.volume_;
      early_ = other.early_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FutureSettlementMark Clone() {
      return new FutureSettlementMark(this);
    }

    /// <summary>Field number for the "_meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Spiderrock.Protobuf.MessageMetadata Meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.MessageMetadata Meta {
      get { return Meta_; }
      set {
        Meta_ = value;
      }
    }

    /// <summary>Field number for the "pkey" field.</summary>
    public const int PkeyFieldNumber = 2;
    private global::Spiderrock.Protobuf.FutureSettlementMark.Types.PKey pkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.FutureSettlementMark.Types.PKey Pkey {
      get { return pkey_; }
      set {
        pkey_ = value;
      }
    }

    /// <summary>Field number for the "settle_date" field.</summary>
    public const int SettleDateFieldNumber = 100;
    private global::Spiderrock.Protobuf.DateKey settleDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.DateKey SettleDate {
      get { return settleDate_; }
      set {
        settleDate_ = value;
      }
    }

    /// <summary>Field number for the "settle_px" field.</summary>
    public const int SettlePxFieldNumber = 103;
    private double settlePx_;
    /// <summary>
    /// Exchange settlement price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double SettlePx {
      get { return settlePx_; }
      set {
        settlePx_ = value;
      }
    }

    /// <summary>Field number for the "low_lmt_px" field.</summary>
    public const int LowLmtPxFieldNumber = 106;
    private double lowLmtPx_;
    /// <summary>
    /// Exchange low limit price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double LowLmtPx {
      get { return lowLmtPx_; }
      set {
        lowLmtPx_ = value;
      }
    }

    /// <summary>Field number for the "high_lmt_px" field.</summary>
    public const int HighLmtPxFieldNumber = 109;
    private double highLmtPx_;
    /// <summary>
    /// Exchange high limit price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double HighLmtPx {
      get { return highLmtPx_; }
      set {
        highLmtPx_ = value;
      }
    }

    /// <summary>Field number for the "open_int" field.</summary>
    public const int OpenIntFieldNumber = 112;
    private int openInt_;
    /// <summary>
    /// Exchange open interest (date prior to settle date)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OpenInt {
      get { return openInt_; }
      set {
        openInt_ = value;
      }
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 115;
    private int volume_;
    /// <summary>
    /// Exchange volume (date prior to settle date)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Volume {
      get { return volume_; }
      set {
        volume_ = value;
      }
    }

    /// <summary>Field number for the "early" field.</summary>
    public const int EarlyFieldNumber = 118;
    private global::Spiderrock.Protobuf.YesNo early_ = global::Spiderrock.Protobuf.YesNo.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spiderrock.Protobuf.YesNo Early {
      get { return early_; }
      set {
        early_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 121;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FutureSettlementMark);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FutureSettlementMark other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Pkey, other.Pkey)) return false;
      if (!object.Equals(SettleDate, other.SettleDate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SettlePx, other.SettlePx)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LowLmtPx, other.LowLmtPx)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(HighLmtPx, other.HighLmtPx)) return false;
      if (OpenInt != other.OpenInt) return false;
      if (Volume != other.Volume) return false;
      if (Early != other.Early) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Meta_ != null) hash ^= Meta.GetHashCode();
      if (pkey_ != null) hash ^= Pkey.GetHashCode();
      if (settleDate_ != null) hash ^= SettleDate.GetHashCode();
      if (SettlePx != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SettlePx);
      if (LowLmtPx != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LowLmtPx);
      if (HighLmtPx != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(HighLmtPx);
      if (OpenInt != 0) hash ^= OpenInt.GetHashCode();
      if (Volume != 0) hash ^= Volume.GetHashCode();
      if (Early != global::Spiderrock.Protobuf.YesNo.Unspecified) hash ^= Early.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (settleDate_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(SettleDate);
      }
      if (SettlePx != 0D) {
        output.WriteRawTag(185, 6);
        output.WriteDouble(SettlePx);
      }
      if (LowLmtPx != 0D) {
        output.WriteRawTag(209, 6);
        output.WriteDouble(LowLmtPx);
      }
      if (HighLmtPx != 0D) {
        output.WriteRawTag(233, 6);
        output.WriteDouble(HighLmtPx);
      }
      if (OpenInt != 0) {
        output.WriteRawTag(128, 7);
        output.WriteInt32(OpenInt);
      }
      if (Volume != 0) {
        output.WriteRawTag(152, 7);
        output.WriteInt32(Volume);
      }
      if (Early != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(176, 7);
        output.WriteEnum((int) Early);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(202, 7);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (pkey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pkey);
      }
      if (settleDate_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(SettleDate);
      }
      if (SettlePx != 0D) {
        output.WriteRawTag(185, 6);
        output.WriteDouble(SettlePx);
      }
      if (LowLmtPx != 0D) {
        output.WriteRawTag(209, 6);
        output.WriteDouble(LowLmtPx);
      }
      if (HighLmtPx != 0D) {
        output.WriteRawTag(233, 6);
        output.WriteDouble(HighLmtPx);
      }
      if (OpenInt != 0) {
        output.WriteRawTag(128, 7);
        output.WriteInt32(OpenInt);
      }
      if (Volume != 0) {
        output.WriteRawTag(152, 7);
        output.WriteInt32(Volume);
      }
      if (Early != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        output.WriteRawTag(176, 7);
        output.WriteEnum((int) Early);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(202, 7);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (pkey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pkey);
      }
      if (settleDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SettleDate);
      }
      if (SettlePx != 0D) {
        size += 2 + 8;
      }
      if (LowLmtPx != 0D) {
        size += 2 + 8;
      }
      if (HighLmtPx != 0D) {
        size += 2 + 8;
      }
      if (OpenInt != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(OpenInt);
      }
      if (Volume != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Volume);
      }
      if (Early != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Early);
      }
      if (timestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FutureSettlementMark other) {
      if (other == null) {
        return;
      }
      if (other.Meta_ != null) {
        if (Meta_ == null) {
          Meta = new global::Spiderrock.Protobuf.MessageMetadata();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.pkey_ != null) {
        if (pkey_ == null) {
          Pkey = new global::Spiderrock.Protobuf.FutureSettlementMark.Types.PKey();
        }
        Pkey.MergeFrom(other.Pkey);
      }
      if (other.settleDate_ != null) {
        if (settleDate_ == null) {
          SettleDate = new global::Spiderrock.Protobuf.DateKey();
        }
        SettleDate.MergeFrom(other.SettleDate);
      }
      if (other.SettlePx != 0D) {
        SettlePx = other.SettlePx;
      }
      if (other.LowLmtPx != 0D) {
        LowLmtPx = other.LowLmtPx;
      }
      if (other.HighLmtPx != 0D) {
        HighLmtPx = other.HighLmtPx;
      }
      if (other.OpenInt != 0) {
        OpenInt = other.OpenInt;
      }
      if (other.Volume != 0) {
        Volume = other.Volume;
      }
      if (other.Early != global::Spiderrock.Protobuf.YesNo.Unspecified) {
        Early = other.Early;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.FutureSettlementMark.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            if (settleDate_ == null) {
              SettleDate = new global::Spiderrock.Protobuf.DateKey();
            }
            input.ReadMessage(SettleDate);
            break;
          }
          case 825: {
            SettlePx = input.ReadDouble();
            break;
          }
          case 849: {
            LowLmtPx = input.ReadDouble();
            break;
          }
          case 873: {
            HighLmtPx = input.ReadDouble();
            break;
          }
          case 896: {
            OpenInt = input.ReadInt32();
            break;
          }
          case 920: {
            Volume = input.ReadInt32();
            break;
          }
          case 944: {
            Early = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 970: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (Meta_ == null) {
              Meta = new global::Spiderrock.Protobuf.MessageMetadata();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 18: {
            if (pkey_ == null) {
              Pkey = new global::Spiderrock.Protobuf.FutureSettlementMark.Types.PKey();
            }
            input.ReadMessage(Pkey);
            break;
          }
          case 802: {
            if (settleDate_ == null) {
              SettleDate = new global::Spiderrock.Protobuf.DateKey();
            }
            input.ReadMessage(SettleDate);
            break;
          }
          case 825: {
            SettlePx = input.ReadDouble();
            break;
          }
          case 849: {
            LowLmtPx = input.ReadDouble();
            break;
          }
          case 873: {
            HighLmtPx = input.ReadDouble();
            break;
          }
          case 896: {
            OpenInt = input.ReadInt32();
            break;
          }
          case 920: {
            Volume = input.ReadInt32();
            break;
          }
          case 944: {
            Early = (global::Spiderrock.Protobuf.YesNo) input.ReadEnum();
            break;
          }
          case 970: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the FutureSettlementMark message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class PKey : pb::IMessage<PKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PKey> _parser = new pb::MessageParser<PKey>(() => new PKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spiderrock.Protobuf.FutureSettlementMark.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey(PKey other) : this() {
          fkey_ = other.fkey_ != null ? other.fkey_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PKey Clone() {
          return new PKey(this);
        }

        /// <summary>Field number for the "fkey" field.</summary>
        public const int FkeyFieldNumber = 10;
        private global::Spiderrock.Protobuf.ExpiryKey fkey_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spiderrock.Protobuf.ExpiryKey Fkey {
          get { return fkey_; }
          set {
            fkey_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Fkey, other.Fkey)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (fkey_ != null) hash ^= Fkey.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (fkey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Fkey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (fkey_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(Fkey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (fkey_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fkey);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PKey other) {
          if (other == null) {
            return;
          }
          if (other.fkey_ != null) {
            if (fkey_ == null) {
              Fkey = new global::Spiderrock.Protobuf.ExpiryKey();
            }
            Fkey.MergeFrom(other.Fkey);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 82: {
                if (fkey_ == null) {
                  Fkey = new global::Spiderrock.Protobuf.ExpiryKey();
                }
                input.ReadMessage(Fkey);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 82: {
                if (fkey_ == null) {
                  Fkey = new global::Spiderrock.Protobuf.ExpiryKey();
                }
                input.ReadMessage(Fkey);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
