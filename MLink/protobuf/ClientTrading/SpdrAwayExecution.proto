syntax = "proto3";

import "spiderrock_common.proto";


package spiderrock.protobuf;

import "google/protobuf/timestamp.proto";

/*
    SpdrAwayExecution records are published by ToolServers, SRSE, and FIX drop recv gateways.  They are consumed by AwayExecutionMarkupServer which, in turn, publishes corresponding SpdrParentExecution records, including M1 and M10 updates.
*/    
message SpdrAwayExecution {
    message PKey {
        
        string accnt = 10; // SR accnt
        int64 client_fill_id = 11; // client fill ID (should be unique for each accnt)
        string client_firm = 12; // SR client firm
    }


    MessageMetadata _meta = 1;
    
    PKey pkey = 2;
    int64 fill_number = 100; // SpiderRock execution number (globally unique over trailing 10 days) [copied in SpdrParentExecution.pkey.fillNumber]
    string engine_name = 200;
    SpdrSource spdr_source = 109; // SR source code
    ExecStatus exec_status = 112; // SR execution status (Fill,Bust,Correct,Reject)
    string client_order_id = 115; // client order ID (should be unique for each clientFirm) (if any) [copied into SpdrParentExecution.altOrderId]
    string src_routing_code = 118; // inbound FIX routing code (drop server) (if any)
    int64 risk_group_id = 121; // riskGroupId (parent order group ID) for this away execution report (will be incorporated into a corresponding EE risk group counter if != 0)
    OptionKey sec_key = 124; // SR security key
    SpdrKeyType sec_type = 127; // SR security type [Stock, Future, Option]
    ExecRole exec_role = 130; // SpiderRock relationship to this execution record
    string ext_exec_broker = 133; // Client execBroker code
    BuySell fill_side = 136; // fill side
    double fill_price = 139; // fill price
    PriceType fill_price_type = 142;
    int32 fill_quantity = 145; // fill quantity
    int32 child_size = 148; // child order size
    string fill_exch = 151; // fill exchange (if any)
    google.protobuf.Timestamp fill_dttm = 154; // fill date/time
    double fill_ref_uPrc = 157; // reference underlier price @ fill arrival time
    string orig_exec_iD = 160; // original execution ID string (child order)
    string last_exec_iD = 163; // most recent execution ID (same as origExecID unless CANCEL/CORRECTION has been processed)
    google.protobuf.Timestamp fill_transact_dttm = 166; // transaction date/time as reported by exchange or down stream broker
    string fill_report_detail = 169; // extra detail (if any) from child execution
    ShortSaleFlag ssale_flag = 172;
    PositionType position_type = 175;
    float theo_vol = 178; // client supplied theoretical volatility (used for markup only)
    string comment = 181; // text comment (if any)
    string user_data1 = 184; // client supplied data field; passes through to parent and child executions and reports as well as FIX drops
    string user_data2 = 187; // client supplied data field; passes through to parent and child executions and reports as well as FIX drops
    string strategy = 190; // client-supplied strategy string
    string modified_by = 193; // user who last modified this record
    SysEnvironment modified_in = 196;
    google.protobuf.Timestamp timestamp = 199; // timestamp of last modification
}


